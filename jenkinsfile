pipeline {
    agent any

    environment {
        MAVEN_HOME = tool name: 'Maven', type: 'maven'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout code from GitHub
                git url: 'https://github.com/arijit0405/simple-crud-app.git', branch: 'main'
            }
        }

        stage('Verify Branch') {
            when {
                expression {
                    // Proceed only if the branch is 'main'
                    return env.GIT_BRANCH == 'origin/main' || env.BRANCH_NAME == 'main'
                }
            }
            steps {
                echo 'On main branch, proceeding with the pipeline...'
            }
        }

        stage('Build') {
            when {
                expression {
                    // Run this stage only if we are on the main branch
                    return env.GIT_BRANCH == 'origin/main' || env.BRANCH_NAME == 'main'
                }
            }
            steps {
                // Clean and compile the application
                bat "${MAVEN_HOME}\\bin\\mvn clean compile"
            }
        }

        stage('Test') {
            when {
                expression {
                    // Run this stage only if we are on the main branch
                    return env.GIT_BRANCH == 'origin/main' || env.BRANCH_NAME == 'main'
                }
            }
            steps {
                // Run unit tests
                bat "${MAVEN_HOME}\\bin\\mvn test"
            }
            post {
                unstable {
                    echo 'Some tests failed.'
                }
            }
        }

        stage('Package') {
            when {
                expression {
                    // Run this stage only if we are on the main branch
                    return env.GIT_BRANCH == 'origin/main' || env.BRANCH_NAME == 'main'
                }
            }
            steps {
                // Package the application as a .jar file
                bat "${MAVEN_HOME}\\bin\\mvn package"
            }
            post {
                success {
                    archiveArtifacts artifacts: 'target\\*.jar', allowEmptyArchive: true
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check logs for more details.'
        }
    }
}
